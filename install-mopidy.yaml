---
- include: install-libspotify.yaml

- name: Install mopidy
  hosts: all

  vars_files:
    - vars/paths.yaml
    - pass_vars.yaml

  vars:

    virtualenv_path: "{{ virtualenv_base }}/mopidy"

    deps:
      apt:
        [gcc, gir1.2-gstreamer-1.0, gir1.2-gst-plugins-base-1.0,
        gstreamer1.0-alsa, gstreamer1.0-pulseaudio,
        gstreamer1.0-plugins-good, gstreamer1.0-plugins-ugly,
        gstreamer1.0-tools, python-dev, python-gst-1.0]
      dnf_yum:
        [gstreamer1-libav, gstreamer-python, gstreamer-plugins-good,
         gstreamer-plugins-ugly, gstreamer-plugins-bad-free,
         gstreamer-plugins-bad-nonfree, libffi-devel, python-devel,
         python-gobject, python-gobject-base, python-pip, python-virtualenv]
      portage:
        [dev-python/pygobject, media-libs/gstreamer, media-libs/gst-plugins-bad,
         media-libs/gst-plugins-base, media-libs/gst-plugins-good,
         media-libs/gst-plugins-ugly]

    pip_deps:
      cffi:
        1.4.2
      Mopidy:
        2.1.0
      pyspotify:
        2.0.5
      Mopidy-Spotify:
        3.1.0
      Mopidy-Spotify-Tunigo:
        1.0.0

  pre_tasks:

    - name: Enable RPM Fusion
      dnf: name={{ item }}
      with_items:
        - https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_version }}.noarch.rpm
        - https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_version }}.noarch.rpm
      when: ansible_distribution == "Fedora"
      become: yes
      tags: dnf-repo

  roles:
    - packages
    - pip_packages

  post_tasks:

    - name: Create virtualenv with site-package access
      command: virtualenv {{ virtualenv_path }} --system-site-packages
      tags: virtualenv

    - name: Generate Mopidy configuration
      shell: |
        source {{ virtualenv_path }}/bin/activate
        mopidy config
      args:
        executable:
          /bin/bash
      tags: config

    - name: Store Spotify username
      local_action: command pass {{ spotify_entry }}
      register: spotify_secrets
      tags: config

    - set_fact:
        spotify_credentials:
          username:
            "{{ spotify_secrets.stdout_lines[1] }}"
          password:
            "{{ spotify_secrets.stdout_lines[0] }}"
      tags: config

    - name: Set Spotify username and password
      ini_file: dest={{ user_home }}/.config/mopidy/mopidy.conf
                section=spotify option={{ item.key }} value={{ item.value }}
      with_dict: "{{ spotify_credentials }}"
      tags: config
