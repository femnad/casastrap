---
- name: Init Private Internet Access scripts

  hosts: all

  vars_files:
    - vars/paths.yaml
    - pia_openvpn.yaml

  vars:
    deps:
      apt:
        openvpn

  roles:
    - packages

  pre_tasks:
    - name: Get Private Internet Access username and password
      local_action: command pass {{ pia_pass_filename }}
      register: up
      tags: pia-password

  tasks:
    - name: Create scripts directory
      file: path={{vpn_scripts_dir}} state=directory
      tags: extract-scripts
    - name: Extract OpenVPN scripts
      unarchive: src=https://www.privateinternetaccess.com/openvpn/openvpn.zip
                 dest={{vpn_scripts_dir}}
                 copy=no
      tags: extract-scripts
    - name: Get list of script files
      find: paths={{vpn_scripts_dir}} patterns='*.ovpn'
      register: scripts
      tags: extract-scripts, edit-scripts
    - name: Create Private Internet Access user password file
      file: path={{ pia_user_password_file }} state=touch
      tags: pia-password
    - name: Save username and password into file
      lineinfile: dest={{ pia_user_password_file }} insertafter=EOF
                  line={{ item }}
      with_items:
        - "{{ up.stdout_lines[1] }}"
        - "{{ up.stdout_lines[0] }}"
      tags: pia-password
    - name: Correct username in file
      replace: "dest={{ pia_user_password_file }} regexp={{ '^user: (.*)' }} replace='\\1'"
      tags: pia-password
    - name: Set permissions for username password file
      file: path={{ pia_user_password_file }} mode=0400
      tags: pia-password
    - name: Set password and cache options
      lineinfile: dest={{ item[0].path }} insertafter=EOF line={{ item[1] }}
      with_nested:
        - "{{scripts.files}}"
        - ["auth-user-pass {{ pia_user_password_filename }}", "auth-nocache"]
      tags: edit-scripts
    - name: Remove empty lines from scripts
      replace: dest={{ item.path }} regexp='^$\n'
      with_items: "{{ scripts.files }}"
      tags: edit-scripts
