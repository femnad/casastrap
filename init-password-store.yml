---
- hosts: localhost
  name: Forward agent for all hosts

  tasks:
    - name: Forward agent for all hosts
      blockinfile:
        path: '{{ ansible_user_dir }}/.ssh/config'
        block: |
          Host *
            ForwardAgent yes

- hosts: all
  name: Initialize password store (almost)

  vars_files:
    - secrets.yaml
    - gpg_vars.yaml

  vars:
    local_gpg_export_dir: '{{ local_gpg_key_location | dirname }}'
    remote_gpg_export_dir: '{{ remote_gpg_key_location | dirname }}'

  tasks:
    - name: Is the instance ready?
      pause:
        prompt: '{{ personal_repos_dir }}/geheim/geheim.sh'

    - name: Clone the password store repo
      vars:
        ansible_ssh_extra_args: '-o ForwardAgent=yes'
      git:
        repo: '{{ geheim_repo }}'
        dest: '{{ ansible_user_dir }}/.password-store'
        ssh_opts: -F none
        accept_hostkey: true

    - name: Export and import secret key
      block:

        - name: Ensure that the local copy directory exists
          file:
            path: '{{ local_gpg_export_dir }}'
            state: directory
          delegate_to: localhost

        - name: Export gpg key
          command: gpg2 --output {{ local_gpg_key_location }} --armor --export-secret-keys {{ gpg_id }}
          delegate_to: localhost

        - name: Ensure that the copy directory exists
          file:
            path: '{{ remote_gpg_export_dir }}'
            state: directory

        - name: Copy the GPG private key to remote machine
          copy:
            src: '{{ local_gpg_key_location }}'
            dest: '{{ remote_gpg_key_location }}'

        - name: Import secret key
          command: gpg2 --import {{ remote_gpg_key_location }}

        - name: Trust the key on the remote
          pause:
            prompt: 'gpg --edit-key {{ gpg_id }} trust'

      always:
        - name: Cleanup local export
          command: shred {{ local_gpg_key_location }}
          delegate_to: localhost

        - name: Cleanup local directory
          file:
            path: '{{ local_gpg_export_dir }}'
            state: absent
          delegate_to: localhost

        - name: Cleanup remote export
          command: shred {{ remote_gpg_key_location }}

        - name: Cleanup remote directory
          file:
            path: '{{ remote_gpg_export_dir }}'
            state: absent

- hosts: localhost
  name: Undo forward agent setting

  tasks:
    - name: Don't forward agent for all hosts
      blockinfile:
        path: '{{ ansible_user_dir }}/.ssh/config'
        state: absent
        block: |
          Host *
            ForwardAgent yes
...
